1. 텍스트 전처리란?
    - 자연어 처리를 위해 용도에 맞도록 사전에 표준화하는 작업
    - 필요성: 텍스트 내 정보를 유지하고, 분석의 효율성을 높이기 위해

2. 텍스트 전처리 개요
    - 분석하기 전 텍스트를 분석에 적합한 형태로 변환하는 작업
        - 전처리 단계는 텍스트를 토큰화하고 자연어 처리에 필요없는 조사,특수 문자,단어(불용어)의 제거 과정을 포함
        - 전처리는 분석결과와 모델성능에 직접영향을 미치기 때문에 전처리단계는 매우 중요

    1) 토큰화(Tokenization)
        - 텍스트를 자연어 처리를 위해 분리하는 것
        - 토큰화는 문장별로 분리하는 "문장 토큰화(Sentence Tokenization)"와 단어별로 분리하는 "단어 토큰화(Word Tokenization)"로 구분

    - 문장 토큰화(Sentence Tokenization)
        - 문장(Sentence)를 기준으로 토큰화
        - 온점(.), 느낌표(!), 물음표(?) 등으로 분류하면 해결 될 것으로 생각됨
        - 하지만 단순하게 분리할 경우 정확한 분리가 어려움

    - 단어 토큰화(Word Tokenization)
        - 단어(word)를 기준으로 토큰화
        - 영문의 경우 공백을 기준으로 분리하면 유의미한 토큰화가 가능
        - 반면 한글의 경우 품사를 고려한 토큰화(=형태소 분석)가 필요
            ex)
            Barack Obama likes fried chicken very much.
            Barack/ Obama/ likes/ fride/ chicken/ very/ much/ .

            버락 오바마는 후라이드 치킨을 너무 좋아한다.
            버락/ 오바마/ 는/ 후라이드/ 치킨/ 을/ 너무/ 좋아한다/ .

        - 단어 토큰화 고려사항
            - 특수문자가 있는 경우(구두점 및 특수문자를 단순하게 제외해서는 안됨)
            - 단어 내 띄어쓰기가 있는 경우

    - 품사 부착(PoS Tagging)
        - 각 토큰에 품사 정보를 추가
        - 분석시에 불필요한 품사를 제거하거나 (ex)조사, 접속사 등) 필요한 품사를 필터링 하기 위해 사용

    - 개체명 인식(NER, Named Entity Recognition)
        - 사람, 조직, 지역, 날짜, 숫자 등 개체 유형을 식별
        - 검색 엔진 색인에 활용

    - 원형 복원
        - 어간 추출(Stemming)
            - 각 토큰의 원형 복원을 함으로써 토큰을 표준화하여 불필요한 데이터 중복을 방지(=단어의 수를 줄일수 있어 연산의 효율성을 높임)
            - 어간 추출(Stemming): 품사를 무시하고 규칙에 기반하여 어간을 추출 (규칙:https://tartarus.org/martin/PorterStemmer/def.txt)

    - 표제어 추출(Lemmatization)
        - 각 토큰의 원형 복원을 함으로써 토큰을 표준화하여 불필요한 데이터 중복을 방지(=단어의 수를 줄일수 있어 연산의 효율성을 높임)
        - 표제어 추출(Lemmatization):품사 정보를 유지하여 표제어 추출(사전 기반)

    -불용어처리(Stopwords)
        - 불필요한 토큰을 제거 하는 작업
        - 불필요한 품사를 제거 하기도 함
